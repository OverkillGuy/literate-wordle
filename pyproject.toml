[tool.poetry]
name = "literate_wordle"
version = "0.1.0"
description = "Wordle implementation in literate programming"
authors = ["Jb Doyon <jb@jiby.tech>"]

[tool.poetry.dependencies]
python = ">=3.8,<3.11"

# [tool.poetry.scripts]
# pywordle = 'literate_wordle.cli.run"

[tool.poetry.dev-dependencies]
pytest = "^6.1.2"
pytest-cov = "^3.0.0"
pytest-clarity = "^1.0.1"
pytest-datadir = "^1.3.1"

# Formatters
#black = "^21.11b1"
# isort = "^5.7.0"
# Python typechecker
mypy = "^0.910"  # sync version in .pre-commit-config.yaml
# Flake8 "mega-linter" (and plugins)
# flake8 = "^4.0.1"  # sync version in .pre-commit-config.yaml
# bandit = "^1.7.0"
# Sync these plugins in flake8 args of .pre-commit-config.yaml:
# DISABLED due to wordle.org org-mode tangle badness
# flake8-bandit = "^2.1.2"
# flake8-bugbear = "^21.3.2"
#flake8-docstrings = "^1.6.0"
# Pylint is a competitor of flake8, shows redundant errors = disabled
# pylint = "^2.7.2"
# flake8-pylint = "^0.1.1"
# Dead code checker (disabled because fussy/noisy)
# vulture = "^2.3"
# CVE dependency checker
safety = "^1.10.3"
# Documentation
Sphinx = "^4.3.1"
sphinx-rtd-theme = "^1.0.0"
myst-parser = "^0.15.2"
sphinx-autoapi = "^1.8.4"
sphinx-collections = "^0.0.1"
sphinxcontrib-needs = "^0.7.5"
sphinxcontrib-plantuml = "^0.22"


[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

# Make isort work with Black
# Avoids conflicting imports
# As per https://pycqa.github.io/isort/docs/configuration/black_compatibility/#using-a-config-file-such-as-isortcfg
[tool.isort]
profile = "black"
multi_line_output = 3

# Avoid pointless warning about performance hit of f-string in loggers
[tool.pylint.message_control]
disable = ["logging-fstring-interpolation"]


[tool.pytest.ini_options]
addopts = """-vv \
	--color=yes \
        --doctest-modules \
       --junit-xml=test_results/results.xml"""
# Disabled until package is imported, otherwise crashes
        # --cov=literate_wordle\
        # --cov-report=xml:test_results/coverage.xml \
        # --cov-report=html:test_results/coverage.html \
        # --cov-report=term \
